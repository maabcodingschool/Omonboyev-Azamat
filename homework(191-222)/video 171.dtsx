<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/25/2021 7:36:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-AJPURCIE"
  DTS:CreatorName="LAPTOP-AJPURCIE\99897"
  DTS:DTSID="{CE32DE76-DA69-4307-AB46-5D2E3DD9966A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.157"
  DTS:LocaleID="1033"
  DTS:ObjectName="video 171"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{28E7A118-1671-42D5-9B61-880F900768E5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DBConn]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{A5DD3918-9C85-4538-A576-CC6C816F28EE}"
      DTS:ObjectName="DBConn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=LAPTOP-AJPURCIE\MSSQLSERVER01;Initial Catalog=SSIS;Integrated Security=True;Application Name=SSIS-video 171-{A5DD3918-9C85-4538-A576-CC6C816F28EE}LAPTOP-AJPURCIE\MSSQLSERVER01.SSIS1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A45413AE-46A9-456D-8EF9-690EE7498595}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFileName">
      <DTS:VariableValue
        DTS:DataType="8">TechBrothersIT_04</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0B01DA0D-62AB-4E45-BF17-070B20CB0757}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\visual 2019\homework\Outputfolder\video 162</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{96103223-4C98-49D5-8C7D-BC464D94DE1E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SheetName">
      <DTS:VariableValue
        DTS:DataType="8">CustomerSheet</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{05D3C5D4-5AC3-4570-9D63-AFA8D19A7939}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">dbo.Customer</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{15C4435B-82BC-47B6-8234-7E964F6E5A2C}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d333abb9ad86476aa234644177600ef1"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ExcelFileName,User::FolderPath,User::SheetName,User::TableName">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d333abb9ad86476aa234644177600ef1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_d333abb9ad86476aa234644177600ef1")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d333abb9ad86476aa234644177600ef1.Properties.Settings.get_Default():ST_d333abb9ad86476aa234644177600ef1.Properties.Sett" +
    "ings")]

namespace ST_d333abb9ad86476aa234644177600ef1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
#endregion

namespace ST_d333abb9ad86476aa234644177600ef1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            try
            {
                //Declare Variables
                string ExcelFileName = Dts.Variables["User::ExcelFileName"].Value.ToString();
                string FolderPath = Dts.Variables["User::FolderPath"].Value.ToString();
                string TableName = Dts.Variables["User::TableName"].Value.ToString();
                string SheetName = Dts.Variables["User::SheetName"].Value.ToString();
                ExcelFileName = ExcelFileName + "_" + datetime;

                OleDbConnection Excel_OLE_Con = new OleDbConnection();
                OleDbCommand Excel_OLE_Cmd = new OleDbCommand();

                //Construct ConnectionString for Excel
                string connstring = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + FolderPath + ExcelFileName
                    + ";" + "Extended Properties=\"Excel 12.0 Xml;HDR=YES;\"";

                //drop Excel file if exists
                File.Delete(FolderPath + "\\" + ExcelFileName + ".xlsx");

                //USE ADO.NET Connection from SSIS Package to get data from table
                SqlConnection myADONETConnection = new SqlConnection();
                myADONETConnection = (SqlConnection)(Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);

                //Load Data into DataTable from SQL ServerTable
                // Assumes that connection is a valid SqlConnection object.
                string queryString =
                  "SELECT * from " + TableName;
                SqlDataAdapter adapter = new SqlDataAdapter(queryString, myADONETConnection);
                DataSet ds = new DataSet();
                adapter.Fill(ds);


                //Get Header Columns
                string TableColumns = "";

                // Get the Column List from Data Table so can create Excel Sheet with Header
                foreach (DataTable table in ds.Tables)
                {
                    foreach (DataColumn column in table.Columns)
                    {
                        TableColumns += column + "],[";
                    }
                }

                // Replace most right comma from Columnlist
                TableColumns = ("[" + TableColumns.Replace(",", " Text,").TrimEnd(','));
                TableColumns = TableColumns.Remove(TableColumns.Length - 2);
                //MessageBox.Show(TableColumns);


                //Use OLE DB Connection and Create Excel Sheet
                Excel_OLE_Con.ConnectionString = connstring;
                Excel_OLE_Con.Open();
                Excel_OLE_Cmd.Connection = Excel_OLE_Con;
                Excel_OLE_Cmd.CommandText = "Create table " + SheetName + " (" + TableColumns + ")";
                Excel_OLE_Cmd.ExecuteNonQuery();


                //Write Data to Excel Sheet from DataTable dynamically
                foreach (DataTable table in ds.Tables)
                {
                    String sqlCommandInsert = "";
                    String sqlCommandValue = "";
                    foreach (DataColumn dataColumn in table.Columns)
                    {
                        sqlCommandValue += dataColumn + "],[";
                    }

                    sqlCommandValue = "[" + sqlCommandValue.TrimEnd(',');
                    sqlCommandValue = sqlCommandValue.Remove(sqlCommandValue.Length - 2);
                    sqlCommandInsert = "INSERT into " + SheetName + "(" + sqlCommandValue.TrimEnd(',') + ") VALUES(";

                    int columnCount = table.Columns.Count;
                    foreach (DataRow row in table.Rows)
                    {
                        string columnvalues = "";
                        for (int i = 0; i < columnCount; i++)
                        {
                            int index = table.Rows.IndexOf(row);
                            columnvalues += "'" + table.Rows[index].ItemArray[i] + "',";

                        }
                        columnvalues = columnvalues.TrimEnd(',');
                        var command = sqlCommandInsert + columnvalues + ")";
                        Excel_OLE_Cmd.CommandText = command;
                        Excel_OLE_Cmd.ExecuteNonQuery();
                    }

                }
                Excel_OLE_Con.Close();
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception exception)
            {

                // Create Log File for Errors
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::FolderPath"].Value.ToString() + "\\" +
                    Dts.Variables["User::ExcelFileName"].Value.ToString() + datetime + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;

                }
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_d333abb9ad86476aa234644177600ef1</msb:CodeName>
    <msb:DisplayName>ST_d333abb9ad86476aa234644177600ef1</msb:DisplayName>
    <msb:ProjectId>{F69E2EF0-6C00-4EF8-9C45-E8E03AFFB1BD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d333abb9ad86476aa234644177600ef1.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_d333abb9ad86476aa234644177600ef1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f8fbc00a-4140-4d4b-8e16-e2fb3b4ac67d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d333abb9ad86476aa234644177600ef1</RootNamespace>
    <AssemblyName>ST_d333abb9ad86476aa234644177600ef1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d333abb9ad86476aa234644177600ef1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d333abb9ad86476aa234644177600ef1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d333abb9ad86476aa234644177600ef1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d333abb9ad86476aa234644177600ef1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d333abb9ad86476aa234644177600ef1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d333abb9ad86476aa234644177600ef1.dll">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
AQABAAAAEABSBq4GdQABAAMAAAEQAPYGrgaJAAMABwADAQAAPgcAAG0ABAAKABEAiQQtAREAUwEx
AREAowA1AQYGVwA5AVaALgc8AVaAMwE8AVAgAAAAAIYAoAQGAAEAFCYAAAAAhhgLBgYAAQAcJgAA
AACDGAsGBgABACQmAAAAAJMIpAVAAQEAUCYAAAAAkwg7AUUBAQBXJgAAAACTCEcBSgEBAF8mAAAA
AJYIawdQAQIAZiYAAAAAhhgLBgYAAgBuJgAAAACRGBEGVQECAAAAAQB/AwkACwYBABEACwYGABkA
CwYKACkACwYQADEACwYQADkACwYQAEEACwYQAEkACwYQAFEACwYQAFkACwYQAGEACwYQAGkACwYG
AOEACwYGAAkBCwYVABkBCwYGAHkA1gdJAHkAwwNOAHEANgdTACEB6AZZACkBdARfADEBdQNmAOkA
wwNqADkBVQduAIEACwYGAIkACwYGADkBVQd1AEEB1QF9AJEACwYGACEBHgeCAEkBdASIACEB2gRm
AFEBVgWPADkBVQeUAFkBCwaaAJkACwYGAGEBbwShAJkA3QanAHEB/QWtAKEAnAdmALkA/wayAKEA
sge4ALEAuAEGADkBmwC8ADkBhgDCADkBzAPIADkBhQPMAIkBrgMQAIkBlQQGAIkANwXRADkBVQfX
AJEBuwcQAJEBAQjIAHEBqAfIALkATAfdAJkBjAPjAJkBdATpAMEA5gfvAIkBsgEGACEBdwcBAEEB
ywf0AKEBJAEQAHEACwYGAOkACwYGAKkB5AD6AKkB9AcDAfEACwYJAREBCwYGAAgAFAAjAQgAGAAo
ASkAcwCQAS4ACwBoAS4AEwBxAS4AGwCQAS4AIwCZAS4AKwDCAS4AMwDCAS4AOwDIAS4AQwCZAS4A
SwDVAS4AUwDCAS4AWwDzAUMAYwAoAUkAcwCQAWEAewAoAWMAawAoARwAAwABAAQAAwAAAKgFWQEA
AFsBXgEAAG8HYwECAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAIcelYsAAAAAAAABAAAA
BAAAAAAAAAAAAAAAEQF9AAAAAAAPAAAAAAAAAAAAAAAaAdcDAAAAAAQAAAAAAAAAAAAAABEBXwAA
AAAABAAAAAAAAAAAAAAAEQF9BAAAAAAPAAAAAAAAAAAAAAAaATgAAAAAAAAAAAABAAAAXAYAAAUA
AgAAAABTVF9kMzMzYWJiOWFkODY0NzZhYTIzNDY0NDE3NzYwMGVmMQA8TW9kdWxlPgBTeXN0ZW0u
SU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAU3lz
dGVtLkRhdGEuT2xlRGIAbXNjb3JsaWIAVHJpbUVuZABPbGVEYkNvbW1hbmQAUmVwbGFjZQBkZWZh
dWx0SW5zdGFuY2UARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRh
Q29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBFZGl0
b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBSZW1vdmUA
SW5kZXhPZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAHNldF9Db25uZWN0aW9uU3RyaW5nAFRv
U3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNUX2QzMzNhYmI5YWQ4NjQ3NmFhMjM0NjQ0MTc3NjAwZWYxLmRsbABG
aWxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBEYXRh
Q29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAGdldF9UcmFu
c2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhVGFibGVDb2xsZWN0aW9uAERhdGFDb2x1bW5D
b2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAHNldF9Db25uZWN0aW9uAE9sZURiQ29ubmVjdGlv
bgBBY3F1aXJlQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5D
b21tb24AQ3VsdHVyZUluZm8AQ2hhcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5h
Z2VyAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAFNxbERhdGFBZGFwdGVyAElFbnVtZXJhdG9yAEdl
dEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZDMzM2FiYjlhZDg2NDc2YWEy
MzQ2NDQxNzc2MDBlZjEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAFNUX2QzMzNhYmI5YWQ4NjQ3NmFhMjM0NjQ0MTc3NjAwZWYxLlByb3BlcnRpZXMAZ2V0X1Rh
YmxlcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9u
cwBnZXRfQ29ubmVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X1Jvd3MA
Q29uY2F0AE9iamVjdABEYXRhU2V0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5E
YXRhLlNxbENsaWVudABnZXRfQ3VycmVudABnZXRfQ291bnQATW92ZU5leHQAc2V0X0NvbW1hbmRU
ZXh0AENyZWF0ZVRleHQAZ2V0X05vdwBEYXRhUm93AGdldF9JdGVtQXJyYXkAZ2V0X0Fzc2VtYmx5
AEV4ZWN1dGVOb25RdWVyeQAAAAAAHXkAeQB5AHkATQBNAGQAZABIAEgAbQBtAHMAcwAAJ1UAcwBl
AHIAOgA6AEUAeABjAGUAbABGAGkAbABlAE4AYQBtAGUAACFVAHMAZQByADoAOgBGAG8AbABkAGUA
cgBQAGEAdABoAAAfVQBzAGUAcgA6ADoAVABhAGIAbABlAE4AYQBtAGUAAB9VAHMAZQByADoAOgBT
AGgAZQBlAHQATgBhAG0AZQAAA18AAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkAYwByAG8AcwBvAGYA
dAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABTAG8AdQByAGMAZQA9
AABdOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0AIgBFAHgAYwBlAGwA
IAAxADIALgAwACAAWABtAGwAOwBIAEQAUgA9AFkARQBTADsAIgAAA1wAAAsuAHgAbABzAHgAAA1E
AEIAQwBvAG4AbgAAHVMARQBMAEUAQwBUACAAKgAgAGYAcgBvAG0AIAAAAQAHXQAsAFsAAANbAAAD
LAAADSAAVABlAHgAdAAsAAAbQwByAGUAYQB0AGUAIAB0AGEAYgBsAGUAIAAABSAAKAAAAykAABlJ
AE4AUwBFAFIAVAAgAGkAbgB0AG8AIAAAAygAABMpACAAVgBBAEwAVQBFAFMAKAAAAycAAQUnACwA
AQkuAGwAbwBnAABxUwBUAF8AZAAzADMAMwBhAGIAYgA5AGEAZAA4ADYANAA3ADYAYQBhADIAMwA0
ADYANAA0ADEANwA3ADYAMAAwAGUAZgAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAMfiNAEx1WkmWjq1pG0khjwAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIEs
BxwOET0ODg4OEkESRQ4SSRJNDhJRElESVRJZEl0ODggSVRJhDg4ICBJlEmkEAAARPQQgAQ4OBSAA
EoCRBSAAEoCVBiABEoCZHAMgABwDIAAOBgADDg4ODgcABA4ODg4OBAABAQ4FIAASgKUGIAESgKkc
BCABHBwFAAIODg4GIAIBDhJJBSABCBJNBSAAEoC1BCAAElEFIAASgL0DIAACBSACDg4OBSABDh0D
AyAACAQgAQ4IBSABARJBBQABDh0OBSAAEoDNBSABCBJhBSABEmEIBCAAHRwFAAESaQ4IAAESgNUR
gNkFIAASgN0HIAIBDhKA3Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJ5AwYSfQMGEhAC
BggDBhEUBAAAEnkEAAASfQUAAQESfQQAABIQAwAAAQQIABJ5BAgAEn0ECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZDMzM2FiYjlhZDg2
NDc2YWEyMzQ2NDQxNzc2MDBlZjEAAAUBAAAAAAwBAAdIUCBJbmMuAAAdAQAYQ29weXJpZ2h0IEAg
SFAgSW5jLiAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAsOgAAAAAAAAAA
AABGOgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAADYEAAAAAAAAAAAAADYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQCVi4ceAAABAJWLhx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASWAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAByAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAMAAIAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABIAFAAIABJAG4AYwAuAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQA
aQBvAG4AAAAAAFMAVABfAGQAMwAzADMAYQBiAGIAOQBhAGQAOAA2ADQANwA2AGEAYQAyADMANAA2
ADQANAAxADcANwA2ADAAMABlAGYAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAA
MQAuADAALgA3ADgAMQA1AC4AMwA1ADcAMwAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBh
AG0AZQAAAFMAVABfAGQAMwAzADMAYQBiAGIAOQBhAGQAOAA2ADQANwA2AGEAYQAyADMANAA2ADQA
NAAxADcANwA2ADAAMABlAGYAMQAuAGQAbABsAAAAVgAZAAEATABlAGcAYQBsAEMAbwBwAHkAcgBp
AGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAASABQACAASQBuAGMALgAgADIAMAAyADEA
AAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwBy
AGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGQAMwAzADMAYQBiAGIAOQBhAGQA
OAA2ADQANwA2AGEAYQAyADMANAA2ADQANAAxADcANwA2ADAAMABlAGYAMQAuAGQAbABsAAAAaAAk
AAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBkADMAMwAzAGEAYgBiADkAYQBkADgA
NgA0ADcANgBhAGEAMgAzADQANgA0ADQAMQA3ADcANgAwADAAZQBmADEAAABCAA8AAQBQAHIAbwBk
AHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAxADUALgAzADUANwAzADMAAAAAAEYA
DwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAxADUALgAz
ADUANwAzADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABYOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="370.833318597741,151.666667872005" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>