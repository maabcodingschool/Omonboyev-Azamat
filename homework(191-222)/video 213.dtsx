<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/29/2021 2:10:19 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-AJPURCIE"
  DTS:CreatorName="LAPTOP-AJPURCIE\99897"
  DTS:DTSID="{F583494C-116B-4637-BAB7-EFD8CAD9E96E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.157"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{E347D8EC-1CCE-4A15-8AF7-0527FFC07069}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DBConn]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{F428663D-C366-46BA-8B73-73FBBB25D31D}"
      DTS:ObjectName="DBConn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=LAPTOP-AJPURCIE;Initial Catalog=SSIS;Integrated Security=True;Application Name=SSIS-Package1-{F428663D-C366-46BA-8B73-73FBBB25D31D}LAPTOP-AJPURCIE.SSIS1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B03C6557-BD96-4EF2-9E2F-C7D8724343F4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinitionFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\visual 2019\homework\Outputfolder\Archive Folder</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{935308F6-7EFD-4242-B319-BA54BCBAA0D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileDelimiter">
      <DTS:VariableValue
        DTS:DataType="8">,</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{530F4550-12FE-4490-B823-BA178EE26641}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10EBF0C7-9A74-424E-B3F8-F92B37F3F678}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileNamePart">
      <DTS:VariableValue
        DTS:DataType="8">Cust</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5DD7635-0A79-47AE-AD45-B1AB05DD6562}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogFolder">
      <DTS:VariableValue
        DTS:DataType="8">D:\visual 2019\homework\Outputfolder\Log</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{65E5300A-919C-41A5-B117-1F1F5E10487A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">Customer</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{E76B5912-905F-4B91-BF5C-DB5B72376762}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b5aad3c439b54c3992ac254bb538a8a7"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DestinitionFolder,User::FileDelimiter,User::FileExtension,User::FileNamePart,User::LogFolder,User::TableName">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5aad3c439b54c3992ac254bb538a8a7.Properties.Settings.get_Default():ST_b5aad3c439b54c3992ac254bb538a8a7.Properties.Sett" +
    "ings")]

namespace ST_b5aad3c439b54c3992ac254bb538a8a7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_b5aad3c439b54c3992ac254bb538a8a7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            try
            {

                //Declare Variables
                string FileNamePart = Dts.Variables["User::FlatFileNamePart"].Value.ToString();
                string DestinationFolder = Dts.Variables["User::DestinationFolder"].Value.ToString();
                string TableName = Dts.Variables["User::TableName"].Value.ToString();
                string FileDelimiter = Dts.Variables["User::FileDelimiter"].Value.ToString();
                string FileExtension = Dts.Variables["User::FileExtension"].Value.ToString();



                //USE ADO.NET Connection from SSIS Package to get data from table
                SqlConnection myADONETConnection = new SqlConnection();
                myADONETConnection = (SqlConnection)(Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);



                //Read data from table or view to data table
                string query = "Select * From " + TableName;
                SqlCommand cmd = new SqlCommand(query, myADONETConnection);
                //myADONETConnection.Open();
                DataTable d_table = new DataTable();
                d_table.Load(cmd.ExecuteReader());
                myADONETConnection.Close();



                string FileFullPath = DestinationFolder + "\\" + FileNamePart + "_" + datetime + FileExtension;

                StreamWriter sw = null;
                sw = new StreamWriter(FileFullPath, false);

                // Write the Header Row to File
                int ColumnCount = d_table.Columns.Count;
                for (int ic = 0; ic < ColumnCount; ic++)
                {
                    sw.Write(d_table.Columns[ic]);
                    if (ic < ColumnCount - 1)
                    {
                        sw.Write(FileDelimiter);
                    }
                }
                sw.Write(sw.NewLine);

                // Write All Rows to the File
                foreach (DataRow dr in d_table.Rows)
                {
                    for (int ir = 0; ir < ColumnCount; ir++)
                    {
                        if (!Convert.IsDBNull(dr[ir]))
                        {
                            sw.Write(dr[ir].ToString());
                        }
                        if (ir < ColumnCount - 1)
                        {
                            sw.Write(FileDelimiter);
                        }
                    }
                    sw.Write(sw.NewLine);

                }

                sw.Close();

                Dts.TaskResult = (int)ScriptResults.Success;
            }



            catch (Exception exception)
            {

                // Create Log File for Errors
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString() + "\\" +
                    "ErrorLog_" + datetime + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;


                }
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_b5aad3c439b54c3992ac254bb538a8a7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{27138cda-a45c-4dc2-bd7d-7cd6ded67296}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b5aad3c439b54c3992ac254bb538a8a7</RootNamespace>
    <AssemblyName>ST_b5aad3c439b54c3992ac254bb538a8a7</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_b5aad3c439b54c3992ac254bb538a8a7</msb:CodeName>
    <msb:DisplayName>ST_b5aad3c439b54c3992ac254bb538a8a7</msb:DisplayName>
    <msb:ProjectId>{D39052FD-FE8F-4D79-9BA9-8127D9493241}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b5aad3c439b54c3992ac254bb538a8a7.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b5aad3c439b54c3992ac254bb538a8a7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_b5aad3c439b54c3992ac254bb538a8a7")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5aad3c439b54c3992ac254bb538a8a7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5aad3c439b54c3992ac254bb538a8a7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b5aad3c439b54c3992ac254bb538a8a7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b5aad3c439b54c3992ac254bb538a8a7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b5aad3c439b54c3992ac254bb538a8a7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b5aad3c439b54c3992ac254bb538a8a7.dll">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
PgQGAOMBwgUGAPsGPgQGAGEF9QUGACkFgQQSAK0B7gMSABQC7gMSAIcBbAQGAMgB1QUKANwDswMW
AIsG5QAWAJ4A5QAWAMEG5QAWAHEF5QAGAI0DPgQOAEEFHQcOADUFXwAOAN8EFgUOALgEXwAOAGwB
XwAOAGEEXwAGAJAFLgAOAM0EXwAGAEkHPgQGANcALgAGABsBPgQGALMAPgQGAHkHpgQAAAAAJQAA
AAAAAQABAAEAEABWBAEAOQABAAEAAAAQAPwFWAZpAAEAAwAAARAAlQZYBn0AAwAHAAMBAADdBgAA
YQAEAAoAEQBKBAgBEQBAAQwBEQCEABABBgZXABQBVoDNBhcBVoAgARcBUCAAAAAAhgBcBAYAAQBY
IwAAAACGGLUFBgABAGAjAAAAAIMYtQUGAAEAaCMAAAAAkwhdBRsBAQCUIwAAAACTCCgBIAEBAJsj
AAAAAJMINAElAQEAoyMAAAAAlggCBysBAgCqIwAAAACGGLUFBgACALIjAAAAAJEYuwUwAQIAAAAB
AGsDCQC1BQEAEQC1BQYAGQC1BQoAKQC1BRAAMQC1BRAAOQC1BRAAQQC1BRAASQC1BRAAUQC1BRAA
WQC1BRAAYQC1BRAAaQC1BQYAyQC1BQYA8QC1BRUAAQG1BQYAeQBlBzsAeQCLA0AAcQDVBkUACQGH
BksAEQE1BFEAGQFhA1gA0QCLA1wAgQC1BQYACQG9BmAAIQE1BGYACQGWBFgAKQHsBG0AMQH0BnIA
iQC1BXgAkQC1BQYAiQBPBX8AkQB0AIUASQGfAQYAMQH0BowAmQC1BZIAkQCeBpgAWQE/B54AUQE1
BKIAaQHCAakAaQHCARAAaQEPAVwAkQDrBq4AWQGnBbQAoQAzB1gAqQA1BLkAeQEsBL4AoQBRB8MA
sQClAQYAaQGfAQYACQEOBwEAMQH0BscAgQFaB88AaQEFARAAcQC1BQYA0QC1BQYAiQHFANUAiQF1
B94A2QC1BeQA+QC1BQYACAAUAP4ACAAYAAMBKQBzAGsBLgALAEMBLgATAEwBLgAbAGsBLgAjAHQB
LgArAJ0BLgAzAJ0BLgA7AKMBLgBDAHQBLgBLALABLgBTAJ0BLgBbAM4BQwBjAAMBSQBzAGsBYQB7
AAMBYwBrAAMBGwADAAEABAADAAAAYQU0AQAASAE5AQAABgc+AQIABAADAAIABQAFAAEABgAFAAIA
BwAHAASAAAABAAAAix4/ZAAAAAAAAAEAAAAEAAAAAAAAAAAAAADsAGsAAAAAAA8AAAAAAAAAAAAA
APUAlAMAAAAABAAAAAAAAAAAAAAA7ABfAAAAAAAEAAAAAAAAAAAAAADsAD4EAAAAAA8AAAAAAAAA
AAAAAPUAOAAAAAAAAAAAAAEAAAAGBgAABQACAAAAAFNUX2I1YWFkM2M0MzliNTRjMzk5MmFjMjU0
YmI1MzhhOGE3ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBMb2FkAFNxbENvbW1hbmQAZGVmYXVsdElu
c3RhbmNlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBGaWxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAV3JpdGVMaW5lAGdldF9OZXdMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVy
bmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bv
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9iNWFhZDNjNDM5YjU0YzM5OTJhYzI1
NGJiNTM4YThhNy5kbGwASXNEQk51bGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBEYXRhQ29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAGdldF9UcmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVj
dGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3Fs
Q29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAElEYXRh
UmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENv
bm5lY3Rpb25NYW5hZ2VyAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAElFbnVtZXJhdG9yAEdldEVu
dW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYjVhYWQzYzQzOWI1NGMzOTkyYWMy
NTRiYjUzOGE4YTcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2I1YWFkM2M0MzliNTRjMzk5MmFjMjU0YmI1MzhhOGE3LlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBnZXRfQ29sdW1ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X0Nvbm5lY3Rp
b25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QA
Z2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJy
ZW50AGdldF9Db3VudABDb252ZXJ0AE1vdmVOZXh0AENyZWF0ZVRleHQAZ2V0X05vdwBEYXRhUm93
AGdldF9Bc3NlbWJseQAAAAAdeQB5AHkAeQBNAE0AZABkAEgASABtAG0AcwBzAAAtVQBzAGUAcgA6
ADoARgBsAGEAdABGAGkAbABlAE4AYQBtAGUAUABhAHIAdAAAL1UAcwBlAHIAOgA6AEQAZQBzAHQA
aQBuAGEAdABpAG8AbgBGAG8AbABkAGUAcgAAH1UAcwBlAHIAOgA6AFQAYQBiAGwAZQBOAGEAbQBl
AAAnVQBzAGUAcgA6ADoARgBpAGwAZQBEAGUAbABpAG0AaQB0AGUAcgAAJ1UAcwBlAHIAOgA6AEYA
aQBsAGUARQB4AHQAZQBuAHMAaQBvAG4AAA1EAEIAQwBvAG4AbgAAHVMAZQBsAGUAYwB0ACAAKgAg
AEYAcgBvAG0AIAAAA1wAAANfAAAfVQBzAGUAcgA6ADoATABvAGcARgBvAGwAZABlAHIAABVcAEUA
cgByAG8AcgBMAG8AZwBfAAAJLgBsAG8AZwAAcVMAVABfAGIANQBhAGEAZAAzAGMANAAzADkAYgA1
ADQAYwAzADkAOQAyAGEAYwAyADUANABiAGIANQAzADgAYQA4AGEANwAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAL42bcRtiUJArmrQZRwaJ1sABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEXUfBxMOET0ODg4ODhJBEkUSSRJNCAgSURJVCBJZEl0STQQAABE9BCABDg4F
IAASgIUFIAASgIkGIAESgI0cAyAAHAMgAA4FIAASgJEGIAESgJUcBCABHBwFAAIODg4GIAIBDhJB
BSAAEoCdBiABARKAoQUAAQ4dDgUgAgEOAgUgABKAqQMgAAgGIAESgLEIBCABARwFIAASgLkEIAAS
UQQgARwIBAABAhwDIAACBwAEDg4ODg4FAAESTQ4IAAESgMURgMkFIAASgM0HIAIBDhKAzQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJtAwYScQMGEhACBggDBhEUBAAAEm0EAAAScQUAAQES
cQQAABIQAwAAAQQIABJtBAgAEnEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfYjVhYWQzYzQzOWI1NGMzOTkyYWMyNTRiYjUzOGE4YTcA
AAUBAAAAAAwBAAdIUCBJbmMuAAAdAQAYQ29weXJpZ2h0IEAgSFAgSW5jLiAyMDIxAABJAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
bWV3b3JrIDQuN7QAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAACgNQAAAAAAAAAAAAC6NQAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAArDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAADYEAAAAAAAAAAAAADYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQA/ZIseAAABAD9kix4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsASWAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAByAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAMAAIAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAABIAFAAIABJAG4AYwAuAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBw
AHQAaQBvAG4AAAAAAFMAVABfAGIANQBhAGEAZAAzAGMANAAzADkAYgA1ADQAYwAzADkAOQAyAGEA
YwAyADUANABiAGIANQAzADgAYQA4AGEANwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgA3ADgAMQA5AC4AMgA1ADYANgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAFMAVABfAGIANQBhAGEAZAAzAGMANAAzADkAYgA1ADQAYwAzADkAOQAyAGEAYwAy
ADUANABiAGIANQAzADgAYQA4AGEANwAuAGQAbABsAAAAVgAZAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAASABQACAASQBuAGMALgAgADIAMAAy
ADEAAAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEA
TwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGIANQBhAGEAZAAzAGMANAAz
ADkAYgA1ADQAYwAzADkAOQAyAGEAYwAyADUANABiAGIANQAzADgAYQA4AGEANwAuAGQAbABsAAAA
aAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBiADUAYQBhAGQAMwBjADQAMwA5
AGIANQA0AGMAMwA5ADkAMgBhAGMAMgA1ADQAYgBiADUAMwA4AGEAOABhADcAAABCAA8AAQBQAHIA
bwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAxADkALgAyADUANgA2ADMAAAAA
AEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAOAAxADkA
LgAyADUANgA2ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADMNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="436.666649315093,234.866668533219" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>